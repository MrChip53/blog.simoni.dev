package templates

import (
    "blog.simoni.dev/templates/components"
    "blog.simoni.dev/models"
)

templ PostPage(post models.BlogPost, contentHtml string, comments []models.Comment) {
    if IsHxRequest(ctx) {
        @PostContent(post, contentHtml, comments)
    } else {
        @Base() {
            @PostContent(post, contentHtml, comments)
        }
    }
}

templ PostContent(post models.BlogPost, contentHtml string, comments []models.Comment) {
    <section class="md:w-1/2 w-5/6">
        <h1 class="mb-4">
            { post.Title }
        </h1>
        <h2 class="mb-6 text-gray-400">
            &commat;{ post.Author }
        </h2>
        <div class="relative">
            if isAuthed(ctx) {
                <div class="absolute right-0 -top-8">
                    <button hx-get={post.GetEditLink(GetAdminRoute(ctx))} hx-target="#main-container" class="ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700" aria-label="Delete Post">
                        <span>Edit</span>
                    </button>
                </div>
            }
            <div class="mb-4 post-body">
                @templ.Raw(contentHtml)
            </div>
        </div>
        <div class="flex flex-wrap items-center gap-4 text-xl">
                            <span class="text-gray-400">
                                { FormatAsDateTime(post.CreatedAt) }
                            </span>
                for _, tag := range post.Tags {
                    @components.TagLink(tag)
                }
        </div>
        <hr class="my-4" />
        <div class="flex flex-col gap-4">
            <h2 id="comments">Comments</h2>
            <div>
                if isAuthed(ctx) {
                    <form hx-boost="true" action={ templ.SafeURL(post.GetCommentPostLink()) } hx-push-url="false" method="POST" class="flex flex-col gap-4">
                        <div class="flex flex-col gap-2">
                            <label for="Username" class="text-lg font-semibold">Username</label>
                            <input type="text" name="Username" id="Username" class="border border-gray-300 rounded-md p-2 text-black" required />
                        </div>
                        <div class="flex flex-col gap-2">
                            <label for="comment" class="text-lg font-semibold">Comment</label>
                            <textarea name="comment" id="comment" cols="30" rows="5" class="border border-gray-300 rounded-md p-2 text-black" required></textarea>
                        </div>
                        <div class="flex flex-col gap-2">
                            <button type="submit" class="bg-purple-600 text-white rounded-md p-2">Post Comment</button>
                        </div>
                    </form>
                } else {
                    <span>You must be logged in to comment.</span>
                }
            </div>
            <div id={ post.GetCommentsHtmlId() } class="flex flex-col gap-2">
                if len(comments) == 0 {
                    This post has no comments. Be the first!
                } else {
                    for _, c := range comments {
                        <div id={ c.GetHtmlId() } class="flex flex-col gap-4 p-1 bg-glass rounded-md">
                            <div class="flex flex-col gap-2">
                                <span class="text-lg font-semibold">{ c.Author }</span>
                                <span>{ c.Comment }</span>
                            </div>
                            <div class="flex flex-col gap-2">
                                <span class="text-gray-400">{ FormatAsDateTime(c.CreatedAt) }</span>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </section>
}