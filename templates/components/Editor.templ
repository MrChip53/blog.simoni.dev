package components

script MountEditor() {
    const kdListeners = []
    kdListeners.forEach((listener) => {
        if (listener.name === "handleEditorTabs") {
            document.removeEventListener("keydown", listener.listener)
        }
    })
    document.addEventListener("keydown", function handleEditorTabs(ev) {
        const tabs = ['editor', 'preview']
        if (ev.altKey === true && ev.key === 'h') {
            ev.preventDefault()
            const currentTabId = document.querySelector("[data-tab-content]:not(.hidden)").id.replace('Content', '')
            const newTabId = tabs[tabs.indexOf(currentTabId) + 1] || tabs[0]
            SwitchTab(newTabId)
        }
    });
}

script SwitchTab(id string) {
    SwitchTab(id)
}

templ EditorComponent(content string, contentHtml string) {
    <script type="text/javascript">
        function SwitchTab(id) {
            const elements = document.querySelectorAll("[data-tab-content]")
            elements.forEach((element) => {
                element.classList.add("hidden")
            })

            const content = document.getElementById(id + "Content")
            content.classList.remove("hidden")

            if (id === "editor" ) {
                const textarea = document.getElementById("content")
                textarea.focus()
            }
        }
    </script>
    @MountEditor()
    <div class="flex flex-col">
        <div data-tab-content id="editorContent" class="flex flex-col gap-2">
            <label for="content" class="text-lg font-semibold">Markdown Editor</label>
            <textarea hx-post="/admin/generate-markdown" hx-swap="innerHTML swap:300ms settle:300ms show:none" hx-trigger="input delay:1s" hx-target="#previewContent" tabindex="-1" name="content" id="content" cols="30" rows="10" class="border border-gray-300 rounded-md p-2 text-black" required>{ content }</textarea>
        </div>
        <div data-tab-content id="previewContent" class="hidden mb-4 post-body">
            @templ.Raw(contentHtml)
        </div>
    </div>
}